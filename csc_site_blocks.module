<?php

use Drupal\views\ViewExecutable;

/**
 * Implements hook_theme().
 */
function csc_site_blocks_theme() {
  return [
    'csc_skewed_block' => [
      'variables' => [
        'bgcolor' => '',
        'divheight' => '',
        'skewheight' => '',
        'angle' => '',
        'marginbottom' => '',
      ],
    ],
  ];
}


/** Views Hooks **/

/**
 * Implements hook_views_post_execute to filter duplicate events in events views based on node ID
 * @param \Drupal\views\ViewExecutable $view
 *
 * @return void
 */
function csc_site_blocks_views_post_execute(ViewExecutable $view) {
  // For Event Row Teasers display (block_2) the events block at the bottom of every page,
  // filter out identical nodes and display a maximum of 8
  if ($view->id() == 'events' && $view->current_display == 'block_2') {
    $eids = [];
    $temp_results = [];
    foreach($view->result as $key => $row) {
      // Only include the row if the nid is unique
      $eid = $row->_entity->id();
      if (!in_array($eid, $eids)) {
        $temp_results[$key] = $row;
        $eids[] = $eid;
      }
    }
    $view->result = array_slice($temp_results, 0, 8);  // Trim results to 8
  }
}


function csc_logit($msg='no message sent to log function', $ltype='notice', $sufx='') {
  if (strlen($sufx) > 0) { $sufx = " $sufx"; }
  if ($ltype == 'warning') {
    Drupal::logger("csc_bs_sass$sufx")->warning($msg);
  } elseif ($ltype == 'error') {
    Drupal::logger("csc_bs_sass$sufx")->error($msg);
  } else {
    Drupal::logger("csc_bs_sass$sufx")->notice($msg);
  }
}

